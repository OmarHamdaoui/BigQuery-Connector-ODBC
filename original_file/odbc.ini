# To use this INI file, replace <INSTALLDIR> with the 
# directory the tarball was extracted to.

[ODBC]
Trace=no

[ODBC Data Sources]
Google BigQuery 32-bit=Simba ODBC Driver for Google BigQuery 32-bit
Google BigQuery 64-bit=Simba ODBC Driver for Google BigQuery 64-bit

[Google BigQuery 32-bit]

# Description: DSN Description.
# This key is not necessary and is only to give a description of the data source.
Description=Simba ODBC Driver for Google BigQuery (32-bit) DSN

# Driver: The location where the ODBC driver is installed to.
Driver=<INSTALLDIR>/lib/libgooglebigqueryodbc_sb32.so

# These values can be set here, or on the connection string.
# Catalog: The catalog to connect to. This is a required setting.
#Catalog=

# SQLDialect: The SQL Dialect to use.  There are two SQL dialects:
# 0 = BigQuery Legacy SQL
# 1 = BigQuery Standard SQL (SQL 11)
SQLDialect=1

# OAuth Mechanism: The OAuth mechanism to use.  There are two choices:
# 0 = Service Authentication
# 1 = User Authentication
# 
# This is a required setting.
OAuthMechanism=1

# RefreshToken: The Refresh Token used. This can be generated from the Windows connection dialog.
# It can also be generated by executing the following steps:
# 1. Get an Authentication by logging into Google from the following URL: 
# https://accounts.google.com/o/oauth2/auth?scope=https://www.googleapis.com/auth/bigquery&response_type=code&redirect_uri=urn:ietf:wg:oauth:2.0:oob&client_id=977385342095.apps.googleusercontent.com&hl=en&from_login=1&as=76356ac9e8ce640b&pli=1&authuser=0
# 2. Run the get_refresh_token.sh shell script and pass in the Authentication Token received in step 1.
# 3. Copy the Refresh Token (the text on the right-side of the colon, without the trailing or leading spaces) from the output of the script.
# This is a required setting.
#RefreshToken=

# Email: For Service Authentication, this is a required setting. It is your GENERATED service account email (not a typical Gmail account).  
# It is unique and associated with at least one public/private key pair.
# Email=

# KeyFile Path: For Service Authentication, this is a required setting.  This is the path to the stored keyfile (.p12).
# KeyFilePath=

# Used to specify the full path of the PEM formatted file containing trusted SSL CA certificates.
# If an empty string is passed in for the configuration, the driver expects the trusted SSL CA
# certificates can be found in the file named cacerts.pem located in the same directory as the
# driver's shared library.
#TrustedCerts=

# AllowLargeResults: When set to 1, the driver allows for result sets in responses to be larger than 128 MB.
AllowLargeResults=0
 
# LargeResultsDataSetId: DatasetId to store temporary tables created.  This is a required setting if AllowLargeResults is set to 1.
LargeResultsDataSetId=_bqodbc_temp_tables
 
# LargeResultsTempTableExpirationTime: Time in milliseconds before the temporary tables created expire.  This is a required setting if AllowLargeResults is set to 1.
LargeResultsTempTableExpirationTime=3600000

[Google BigQuery 64-bit]

# Description: DSN Description.
# This key is not necessary and is only to give a description of the data source.
Description=Simba ODBC Driver for Google BigQuery (64-bit) DSN

# Driver: The location where the ODBC driver is installed to.
Driver=<INSTALLDIR>/lib/libgooglebigqueryodbc_sb64.so

# These values can be set here, or on the connection string.
# Catalog: The catalog to connect to. This is a required setting.
#Catalog=

# SQLDialect: The SQL Dialect to use.  There are two SQL dialects:
# 0 = BigQuery Legacy SQL
# 1 = BigQuery Standard SQL (SQL 11)
SQLDialect=1

# OAuth Mechanism: The OAuth mechanism to use.  There are two choices:
# 0 = Service Authentication
# 1 = User Authentication
# 
# This is a required setting.
OAuthMechanism=1

# RefreshToken: The Refresh Token used. This can be generated from the Windows connection dialog.
# It can also be generated by executing the following steps:
# 1. Get an Authentication by logging into Google from the following URL: 
# https://accounts.google.com/o/oauth2/auth?scope=https://www.googleapis.com/auth/bigquery&response_type=code&redirect_uri=urn:ietf:wg:oauth:2.0:oob&client_id=977385342095.apps.googleusercontent.com&hl=en&from_login=1&as=76356ac9e8ce640b&pli=1&authuser=0
# 2. Run the get_refresh_token.sh shell script and pass in the Authentication Token received in step 1.
# 3. Copy the Refresh Token (the text on the right-side of the colon, without the trailing or leading spaces) from the output of the script.
# This is a required setting.
#RefreshToken=

# Email: For Service Authentication, this is a required setting. It is your GENERATED service account email (not a typical Gmail account).  
# It is unique and associated with at least one public/private key pair.
# Email=

# KeyFile Path: For Service Authentication, this is a required setting.  This is the path to the stored keyfile (.p12).
# KeyFilePath=

# Used to specify the full path of the PEM formatted file containing trusted SSL CA certificates.
# If an empty string is passed in for the configuration, the driver expects the trusted SSL CA
# certificates can be found in the file named cacerts.pem located in the same directory as the
# driver's shared library.
#TrustedCerts=

# AllowLargeResults: When set to 1, the driver allows for result sets in responses to be larger than 128 MB.
AllowLargeResults=0
 
# LargeResultsDataSetId: DatasetId to store temporary tables created.  This is a required setting if AllowLargeResults is set to 1.
LargeResultsDataSetId=_bqodbc_temp_tables
 
# LargeResultsTempTableExpirationTime: Time in milliseconds before the temporary tables created expire.  This is a required setting if AllowLargeResults is set to 1.
LargeResultsTempTableExpirationTime=3600000

# EnableHTAPI: This set to 1 by default.
#EnableHTAPI=1

# HTAPI_MinResultsSize: An integer representing the minimum required number of rows in the results of
#   a query to enable the High-Throughput API. This means that when the results of a query are
#   gathered, they must have at least this many rows or the High-Throughput API will not be used to
#   retrieve them.
#HTAPI_MinResultsSize=1000

# HTAPI_MinActivationRatio: An integer representing the minimum required ratio of rows to block size
#   to enable the High-Throughput API. This means that when the results from a query are gathered,
#   if there are not at least N times as many rows in the results as there are in the first page of
#   results, then the High-Throughput API will not be used to retrieve them, where N is the ratio
#   given. Result pages have at most as many rows as are specified by the RowsFetchedPerBlock
#   connection property.
#HTAPI_MinActivationRatio=3
